emulate -RL zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops

[[ "$1" = plugin ]] && \
    local type="$1" user="$2" plugin="$3" id_as="$4" dir="$5" || \
    local type="$1" url="$2" id_as="$3" dir="$4"

local -x GEM_HOME="$ZMAN_REPO_DIR" RUBYLIB="$RUBYLIB:$ZMAN_REPO_DIR/ronn/lib"
local ronn_bin="$ZMAN_REPO_DIR/ronn/bin/ronn"
local -x PATH="$ZMAN_REPO_DIR/bin:$PATH"

if [[ -f $dir/README.md && ( ! -f $dir/README || $dir/README.md -nt $dir/README ) ]]; then
    [[ -f $dir/README ]] && \
        print -P -- "%F{38}zman z-plugin: %F{154}Updating the manual page for the \
%F{220}${url+$url%F\{154\} snippet}${plugin+$plugin%F\{154\} plugin}...%f" || \
        print -P -- "%F{38}zman z-plugin: %F{154}Generating the manual page for the \
%F{220}${url+$url%F\{154\} snippet}${plugin+$plugin%F\{154\} plugin}...%f"
    $ronn_bin --roff \
        --manual="Manual For \`${url+$url\' Snippet}${plugin+${plugin##-##}\' Plugin}" \
        ${user+--organization="$user"} \
        "$dir/README.md" 2>/dev/null
else
    [[ -f $dir/README.md ]] && \
        print -P -- "%F{38}zman z-plugin: %F{154}Manual page is up to date%f" || \
        print -P -- "%F{38}zman z-plugin: %F{154}No README.md in the \
%F{220}${url+$url%F\{154\} snippet}${plugin+$plugin%F\{154\} plugin}%f"
fi

local -a outdated_pths
local pth fname
local -a farray submods

farray=(
    $dir/*.plugin.zsh(N) $dir/*.zsh-theme(N)
    $dir/*.zsh(N) $dir/init.zsh(N) $dir/*.sh(N)
    $dir/.zshrc(N)
)

[[ -f $dir/.gitmodules ]] && submods=( ${(@f)"$( grep 'path[[:space:]]*=' $dir/.gitmodules )"} )
submods=( ${submods[@]//(#s)[[:space:]]#path[[:space:]]#=[[:space:]]#/} )
submods=( --exclude-dir=${^submods} )

# Include files with zsh-filetype modelines
farray+=( $dir/${(@f)^"$( cd "$dir" && egrep -rl --exclude-dir=bin --exclude-dir=.git \
--exclude-dir=zsdoc ${submods[@]} \
"(#[[:space:]]+vim:.*ft=(sh|bash|zsh)|#[[:space:]]+vim:.*filetype=(sh|bash|zsh)|\
-\*-[[:space:]]+.*Mode:[[:space:]]*(sh|bash|zsh|ksh))" .)"}(N) )

farray=( ${farray[@]:#${dir%/#}/} )

(
    cd "$dir"
    for pth (${(u)farray[@]:P}) {
        fname="${pth:t}"

        if [[ ! -f $dir/zsdoc/$fname.adoc || \
            ( $pth -nt $dir/zsdoc/$fname.adoc )
        ]]; then
            outdated_pths+=( "$pth" )
        fi
    }

    if (( ${#outdated_pths} )); then
        (
            if cd $dir; then
                print -P -- "%F{38}zman z-plugin: %F{154}Generating code documentation...%f"
                zsd --fpath "$dir:$dir/autoload:$dir/autoloads:$dir/function:\
$dir/functions:$dir/fun:$dir/func:$dir/funct" \
                    -r --scomm --cignore '(\#*FUN(C|CTION|):*{{{*|\#[[:space:]]#}}}*)' \
                    ${outdated_pths[@]}
                asciidoctor -b manpage zsdoc/${^outdated_pths[@]:t}.adoc 2>/dev/null
            fi
        )
    else
        if (( ${#farray} )); then
            print -P -- "%F{38}zman z-plugin: %F{154}Code documentation is up to date%f"
        else
            print -P -- "%F{38}zman z-plugin: %F{154}No files with code found%f"
        fi
    fi
)

    # vim:ft=zsh:sts=4:sw=4:et
